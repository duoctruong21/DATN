// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMusic.Models.EF;

#nullable disable

namespace WebMusic.Migrations
{
    [DbContext(typeof(MusicWebContext))]
    [Migration("20230623203054_mssql.onprem_migration_591")]
    partial class mssqlonprem_migration_591
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumWithSong", b =>
                {
                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("idAlbum");

                    b.Property<int>("IdSong")
                        .HasColumnType("int")
                        .HasColumnName("idSong");

                    b.HasKey("IdAlbum", "IdSong")
                        .HasName("PK__AlbumWit__2C6A336212C7C74E");

                    b.HasIndex("IdSong");

                    b.ToTable("AlbumWithSong", (string)null);
                });

            modelBuilder.Entity("CategoryWithAlbum", b =>
                {
                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("idAlbum");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.HasKey("IdAlbum", "IdCategory")
                        .HasName("PK__Category__8787315383D5252F");

                    b.HasIndex("IdCategory");

                    b.ToTable("CategoryWithAlbum", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlbumDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AlbumImg")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlbumName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("alias");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("iduser");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__album__3213E83FEBFF353B");

                    b.ToTable("album", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Albumuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idalbum")
                        .HasColumnType("int")
                        .HasColumnName("idalbum");

                    b.Property<int?>("Idcategory")
                        .HasColumnType("int")
                        .HasColumnName("idcategory");

                    b.Property<int?>("Idsong")
                        .HasColumnType("int")
                        .HasColumnName("idsong");

                    b.HasKey("Id")
                        .HasName("PK__albumuse__3213E83FB1134762");

                    b.HasIndex("Idalbum");

                    b.HasIndex("Idsong");

                    b.ToTable("albumuser", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("alias");

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryImg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__category__3213E83F3DC5CB31");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.CategoryWithSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idcategory")
                        .HasColumnType("int")
                        .HasColumnName("idcategory");

                    b.Property<int?>("Idsong")
                        .HasColumnType("int")
                        .HasColumnName("idsong");

                    b.HasKey("Id")
                        .HasName("PK__category__3213E83F8B2338B1");

                    b.HasIndex("Idcategory");

                    b.HasIndex("Idsong");

                    b.ToTable("categoryWithSong", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Countlisten")
                        .HasColumnType("int")
                        .HasColumnName("countlisten");

                    b.Property<int?>("Idsong")
                        .HasColumnType("int")
                        .HasColumnName("idsong");

                    b.Property<int?>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("iduser");

                    b.Property<DateTime?>("Listendate")
                        .HasColumnType("datetime")
                        .HasColumnName("listendate");

                    b.Property<bool?>("Listened")
                        .HasColumnType("bit")
                        .HasColumnName("listened");

                    b.HasKey("Id")
                        .HasName("PK__history__3213E83F9524EAC5");

                    b.HasIndex("Idsong");

                    b.HasIndex("Iduser");

                    b.ToTable("history", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Singer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("alias");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Fileimg")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fileimg");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("SingerDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("singerDescription");

                    b.Property<string>("SingerInfomation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("singerInfomation");

                    b.Property<string>("SingerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singerName");

                    b.HasKey("Id")
                        .HasName("PK__singer__3213E83F9DF97DE0");

                    b.ToTable("singer", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("alias");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Fileimg")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fileimg");

                    b.Property<string>("Filesong")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("filesong");

                    b.Property<int?>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("idAlbum");

                    b.Property<int?>("IdSinger")
                        .HasColumnType("int")
                        .HasColumnName("idSinger");

                    b.Property<int?>("Idcategory")
                        .HasColumnType("int")
                        .HasColumnName("idcategory");

                    b.Property<int?>("Idtopic")
                        .HasColumnType("int")
                        .HasColumnName("idtopic");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int")
                        .HasColumnName("likeCount");

                    b.Property<int?>("ListenCount")
                        .HasColumnType("int");

                    b.Property<string>("LyricSong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RecentListendate")
                        .HasColumnType("datetime")
                        .HasColumnName("recentListendate");

                    b.Property<string>("SongDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("songDescription");

                    b.Property<string>("SongName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("songName");

                    b.Property<int?>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnName("viewCount");

                    b.HasKey("Id")
                        .HasName("PK__song__3213E83F30E44511");

                    b.HasIndex("IdAlbum");

                    b.HasIndex("IdSinger");

                    b.HasIndex("Idcategory");

                    b.HasIndex("Idtopic");

                    b.ToTable("song", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("alias");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("TopicDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TopicImg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TopicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__topic__3213E83F9794D3E3");

                    b.ToTable("topic", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.Topicwithsong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idsong")
                        .HasColumnType("int")
                        .HasColumnName("idsong");

                    b.Property<int?>("Idtopic")
                        .HasColumnType("int")
                        .HasColumnName("idtopic");

                    b.HasKey("Id")
                        .HasName("PK__topicwit__3213E83FD48995C6");

                    b.HasIndex("Idsong");

                    b.HasIndex("Idtopic");

                    b.ToTable("topicwithsong", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.UserWebMusic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gmail");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LinkAvatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("linkAvatar");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("note");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("UserWebMusic", (string)null);
                });

            modelBuilder.Entity("AlbumWithSong", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Album", null)
                        .WithMany()
                        .HasForeignKey("IdAlbum")
                        .IsRequired()
                        .HasConstraintName("FK__AlbumWith__idAlb__4F7CD00D");

                    b.HasOne("WebMusic.Models.EF.Song", null)
                        .WithMany()
                        .HasForeignKey("IdSong")
                        .IsRequired()
                        .HasConstraintName("FK__AlbumWith__idSon__5070F446");
                });

            modelBuilder.Entity("CategoryWithAlbum", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Album", null)
                        .WithMany()
                        .HasForeignKey("IdAlbum")
                        .IsRequired()
                        .HasConstraintName("FK__CategoryW__idAlb__412EB0B6");

                    b.HasOne("WebMusic.Models.EF.Category", null)
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK__CategoryW__idCat__4222D4EF");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Albumuser", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Album", "IdalbumNavigation")
                        .WithMany("Albumusers")
                        .HasForeignKey("Idalbum")
                        .HasConstraintName("FK__albumuser__idalb__47A6A41B");

                    b.HasOne("WebMusic.Models.EF.Song", "IdsongNavigation")
                        .WithMany("Albumusers")
                        .HasForeignKey("Idsong")
                        .HasConstraintName("FK__albumuser__idson__489AC854");

                    b.Navigation("IdalbumNavigation");

                    b.Navigation("IdsongNavigation");
                });

            modelBuilder.Entity("WebMusic.Models.EF.CategoryWithSong", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Category", "IdcategoryNavigation")
                        .WithMany("CategoryWithSongs")
                        .HasForeignKey("Idcategory")
                        .HasConstraintName("FK__categoryW__idcat__625A9A57");

                    b.HasOne("WebMusic.Models.EF.Song", "IdsongNavigation")
                        .WithMany("CategoryWithSongs")
                        .HasForeignKey("Idsong")
                        .HasConstraintName("FK__categoryW__idson__634EBE90");

                    b.Navigation("IdcategoryNavigation");

                    b.Navigation("IdsongNavigation");
                });

            modelBuilder.Entity("WebMusic.Models.EF.History", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Song", "IdsongNavigation")
                        .WithMany("Histories")
                        .HasForeignKey("Idsong")
                        .HasConstraintName("FK__history__idsong__3D2915A8");

                    b.HasOne("WebMusic.Models.EF.UserWebMusic", "IduserNavigation")
                        .WithMany("Histories")
                        .HasForeignKey("Iduser")
                        .HasConstraintName("FK__history__iduser__3C34F16F");

                    b.Navigation("IdsongNavigation");

                    b.Navigation("IduserNavigation");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Song", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Album", "IdAlbumNavigation")
                        .WithMany("Songs")
                        .HasForeignKey("IdAlbum")
                        .HasConstraintName("fk_idalbum");

                    b.HasOne("WebMusic.Models.EF.Singer", "IdSingerNavigation")
                        .WithMany("Songs")
                        .HasForeignKey("IdSinger")
                        .HasConstraintName("FK__song__idSinger__4CA06362");

                    b.HasOne("WebMusic.Models.EF.Category", "IdcategoryNavigation")
                        .WithMany("Songs")
                        .HasForeignKey("Idcategory")
                        .HasConstraintName("FK__song__idcategory__4E53A1AA");

                    b.HasOne("WebMusic.Models.EF.Topic", "IdtopicNavigation")
                        .WithMany("Songs")
                        .HasForeignKey("Idtopic")
                        .HasConstraintName("FK__song__idtopic__4D5F7D71");

                    b.Navigation("IdAlbumNavigation");

                    b.Navigation("IdSingerNavigation");

                    b.Navigation("IdcategoryNavigation");

                    b.Navigation("IdtopicNavigation");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Topicwithsong", b =>
                {
                    b.HasOne("WebMusic.Models.EF.Song", "IdsongNavigation")
                        .WithMany("Topicwithsongs")
                        .HasForeignKey("Idsong")
                        .HasConstraintName("FK__topicwith__idson__671F4F74");

                    b.HasOne("WebMusic.Models.EF.Topic", "IdtopicNavigation")
                        .WithMany("Topicwithsongs")
                        .HasForeignKey("Idtopic")
                        .HasConstraintName("FK__topicwith__idtop__662B2B3B");

                    b.Navigation("IdsongNavigation");

                    b.Navigation("IdtopicNavigation");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Album", b =>
                {
                    b.Navigation("Albumusers");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Category", b =>
                {
                    b.Navigation("CategoryWithSongs");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Singer", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Song", b =>
                {
                    b.Navigation("Albumusers");

                    b.Navigation("CategoryWithSongs");

                    b.Navigation("Histories");

                    b.Navigation("Topicwithsongs");
                });

            modelBuilder.Entity("WebMusic.Models.EF.Topic", b =>
                {
                    b.Navigation("Songs");

                    b.Navigation("Topicwithsongs");
                });

            modelBuilder.Entity("WebMusic.Models.EF.UserWebMusic", b =>
                {
                    b.Navigation("Histories");
                });
#pragma warning restore 612, 618
        }
    }
}
