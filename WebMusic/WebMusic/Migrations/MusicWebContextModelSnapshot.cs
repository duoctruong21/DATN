// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMusic.models.ef;

#nullable disable

namespace WebMusic.Migrations
{
    [DbContext(typeof(MusicWebContext))]
    partial class MusicWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumWithSong", b =>
                {
                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("idAlbum");

                    b.Property<int>("IdSong")
                        .HasColumnType("int")
                        .HasColumnName("idSong");

                    b.HasKey("IdAlbum", "IdSong")
                        .HasName("PK__AlbumWit__2C6A336212C7C74E");

                    b.HasIndex("IdSong");

                    b.ToTable("AlbumWithSong", (string)null);
                });

            modelBuilder.Entity("CategoryWithAlbum", b =>
                {
                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("idAlbum");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.HasKey("IdAlbum", "IdCategory")
                        .HasName("PK__Category__8787315383D5252F");

                    b.HasIndex("IdCategory");

                    b.ToTable("CategoryWithAlbum", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TopicWithCategory", b =>
                {
                    b.Property<int>("IdTopic")
                        .HasColumnType("int")
                        .HasColumnName("idTopic");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.HasKey("IdTopic", "IdCategory")
                        .HasName("PK__topicWit__F3DDCA6E2B0F6DE9");

                    b.HasIndex("IdCategory");

                    b.ToTable("topicWithCategory", (string)null);
                });

            modelBuilder.Entity("WebMusic.Models.EF.MusicUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebMusic.models.ef.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlbumDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AlbumImg")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlbumName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__album__3213E83FEBFF353B");

                    b.ToTable("album", (string)null);
                });

            modelBuilder.Entity("WebMusic.models.ef.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryImg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__category__3213E83F3DC5CB31");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("WebMusic.models.ef.Singer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Fileimg")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fileimg");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("SingerDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("singerDescription");

                    b.Property<string>("SingerInfomation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("singerInfomation");

                    b.Property<string>("SingerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singerName");

                    b.HasKey("Id")
                        .HasName("PK__singer__3213E83F9DF97DE0");

                    b.ToTable("singer", (string)null);
                });

            modelBuilder.Entity("WebMusic.models.ef.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Fileimg")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fileimg");

                    b.Property<string>("Filesong")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("filesong");

                    b.Property<int?>("IdSinger")
                        .HasColumnType("int")
                        .HasColumnName("idSinger");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int")
                        .HasColumnName("likeCount");

                    b.Property<int?>("ListenCount")
                        .HasColumnType("int");

                    b.Property<string>("LyricSong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("SongDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("songDescription");

                    b.Property<string>("SongName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("songName");

                    b.Property<int?>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnName("viewCount");

                    b.HasKey("Id")
                        .HasName("PK__song__3213E83F30E44511");

                    b.HasIndex("IdSinger");

                    b.ToTable("song", (string)null);
                });

            modelBuilder.Entity("WebMusic.models.ef.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("TopicDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TopicImg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TopicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__topic__3213E83F9794D3E3");

                    b.ToTable("topic", (string)null);
                });

            modelBuilder.Entity("WebMusic.models.ef.UserWithSong", b =>
                {
                    b.Property<string>("Iduser")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("iduser");

                    b.Property<int>("Idsong")
                        .HasColumnType("int")
                        .HasColumnName("idsong");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("status");

                    b.HasKey("Iduser", "Idsong")
                        .HasName("PK__UserWith__740AC515298787E5");

                    b.HasIndex("Idsong");

                    b.ToTable("UserWithSong", (string)null);
                });

            modelBuilder.Entity("AlbumWithSong", b =>
                {
                    b.HasOne("WebMusic.models.ef.Album", null)
                        .WithMany()
                        .HasForeignKey("IdAlbum")
                        .IsRequired()
                        .HasConstraintName("FK__AlbumWith__idAlb__4F7CD00D");

                    b.HasOne("WebMusic.models.ef.Song", null)
                        .WithMany()
                        .HasForeignKey("IdSong")
                        .IsRequired()
                        .HasConstraintName("FK__AlbumWith__idSon__5070F446");
                });

            modelBuilder.Entity("CategoryWithAlbum", b =>
                {
                    b.HasOne("WebMusic.models.ef.Album", null)
                        .WithMany()
                        .HasForeignKey("IdAlbum")
                        .IsRequired()
                        .HasConstraintName("FK__CategoryW__idAlb__412EB0B6");

                    b.HasOne("WebMusic.models.ef.Category", null)
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK__CategoryW__idCat__4222D4EF");
                });

            modelBuilder.Entity("TopicWithCategory", b =>
                {
                    b.HasOne("WebMusic.models.ef.Category", null)
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK__topicWith__idCat__3C69FB99");

                    b.HasOne("WebMusic.models.ef.Topic", null)
                        .WithMany()
                        .HasForeignKey("IdTopic")
                        .IsRequired()
                        .HasConstraintName("FK__topicWith__idTop__3B75D760");
                });

            modelBuilder.Entity("WebMusic.models.ef.Song", b =>
                {
                    b.HasOne("WebMusic.models.ef.Singer", "IdSingerNavigation")
                        .WithMany("Songs")
                        .HasForeignKey("IdSinger")
                        .HasConstraintName("FK__song__idSinger__4CA06362");

                    b.Navigation("IdSingerNavigation");
                });

            modelBuilder.Entity("WebMusic.models.ef.UserWithSong", b =>
                {
                    b.HasOne("WebMusic.models.ef.Song", "IdsongNavigation")
                        .WithMany("UserWithSongs")
                        .HasForeignKey("Idsong")
                        .IsRequired()
                        .HasConstraintName("FK__UserWithS__idson__534D60F1");

                    b.Navigation("IdsongNavigation");
                });

            modelBuilder.Entity("WebMusic.models.ef.Singer", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("WebMusic.models.ef.Song", b =>
                {
                    b.Navigation("UserWithSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
